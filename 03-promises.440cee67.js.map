{"version":3,"sources":["js/03-promises.js"],"names":["refs","delay","document","querySelector","step","amount","btn","position","onFirstDelay","e","Number","parseInt","target","value","onStepDelay","onAmount","onClick","preventDefault","i","createPromise","then","console","log","catch","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener"],"mappings":";AAAA,MAAMA,EAAO,CACXC,MAAOC,SAASC,cAAc,gBAC9BC,KAAMF,SAASC,cAAc,eAC7BE,OAAQH,SAASC,cAAc,kBAC/BG,IAAKJ,SAASC,cAAc,yBAG9B,IAAIF,EACAG,EACAC,EACAE,EAAW,EAOf,SAASC,EAAaC,GACpBR,EAAQS,OAAOC,SAASF,EAAEG,OAAOC,OAGnC,SAASC,EAAYL,GACnBL,EAAOM,OAAOC,SAASF,EAAEG,OAAOC,OAGlC,SAASE,EAASN,GAChBJ,EAASK,OAAOC,SAASF,EAAEG,OAAOC,OAGpC,SAASG,EAAQP,GACfA,EAAEQ,iBACFV,EAAW,EAEN,IAAA,IAAIW,EAAI,EAAGA,GAAKb,EAAQa,GAAK,EAEhCC,EAAcZ,EAAUN,GACzBmB,KAAK,EAAEb,SAAAA,EAAUN,MAAAA,MAChBoB,QAAQC,2BAA2Bf,QAAeN,SAEnDsB,MAAM,EAAGhB,SAAAA,EAAUN,MAAAA,MAClBoB,QAAQC,0BAA0Bf,QAAeN,SAGnDM,GAAY,EACZN,GAASG,EAKX,SAASe,EAAcZ,EAAUN,GAGxB,OAAA,IAAIuB,QAAQ,CAACC,EAASC,KACrBC,MAAAA,EAAgBC,KAAKC,SAAW,GAEtBC,WAAW,KAErBH,EAEFF,EAAQ,CAAClB,SAAAA,EAAUN,MAAAA,IAGnByB,EAAO,CAACnB,SAAAA,EAAUN,MAAAA,KAGnBA,KArDPD,EAAKC,MAAM8B,iBAAiB,QAASvB,GACrCR,EAAKI,KAAK2B,iBAAiB,QAASjB,GACpCd,EAAKK,OAAO0B,iBAAiB,QAAShB,GACtCf,EAAKM,IAAIyB,iBAAiB,QAASf","file":"03-promises.440cee67.js","sourceRoot":"../src","sourcesContent":["const refs = {\n  delay: document.querySelector('[name=delay]'),\n  step: document.querySelector('[name=step]'),\n  amount: document.querySelector('[name= amount]'),\n  btn: document.querySelector('button[type= submit]'),\n};\n\nlet delay;\nlet step;\nlet amount;\nlet position = 0;\n\nrefs.delay.addEventListener('input', onFirstDelay);\nrefs.step.addEventListener('input', onStepDelay);\nrefs.amount.addEventListener('input', onAmount);\nrefs.btn.addEventListener('click', onClick);\n\nfunction onFirstDelay(e) {\n  delay = Number.parseInt(e.target.value);\n}\n\nfunction onStepDelay(e) {\n  step = Number.parseInt(e.target.value);\n}\n\nfunction onAmount(e) {\n  amount = Number.parseInt(e.target.value);\n}\n\nfunction onClick(e) {\n  e.preventDefault();\n  position = 1;\n\n  for (let i = 1; i <= amount; i += 1) {\n    \n    createPromise(position, delay)\n  .then(({position, delay}) => {\n    console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(( {position, delay} ) => {\n    console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n  });\n\n  position += 1;\n  delay += step;\n  }\n\n}\n\nfunction createPromise(position, delay) {\n\n\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    const timeout = setTimeout(() => {\n\n      if (shouldResolve) {\n        // Fulfill\n        resolve({position, delay});\n      } else {\n        // Reject\n        reject({position, delay});\n\n      }\n    }, delay);\n\n  });\n\n}\n"]}